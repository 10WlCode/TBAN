<!DOCTYPE html>
<!-- saved from url=(0075)https://reactnavigation.org/docs/en/navigating-without-navigation-prop.html -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><title>Navigating without the navigation prop · React Navigation</title><meta name="viewport" content="width=device-width"><meta name="generator" content="Docusaurus"><meta name="description" content="Calling functions such as `navigate` or `popToTop` on the `navigation` prop is not the only way to navigate around your app. As an alternative, you can dispatch navigation actions on your top-level navigator, provided you aren&#39;t passing your own `navigation` prop as you would with a redux integration. The presented approach is useful in situations when you want to trigger a navigation action from places where you do not have access to the `navigation` prop, or if you&#39;re looking for an alternative to using the `navigation` prop."><meta name="docsearch:version" content="2.x"><meta name="docsearch:language" content="en"><meta property="og:title" content="Navigating without the navigation prop · React Navigation"><meta property="og:type" content="website"><meta property="og:url" content="https://reactnavigation.org/index.html"><meta property="og:description" content="Calling functions such as `navigate` or `popToTop` on the `navigation` prop is not the only way to navigate around your app. As an alternative, you can dispatch navigation actions on your top-level navigator, provided you aren&#39;t passing your own `navigation` prop as you would with a redux integration. The presented approach is useful in situations when you want to trigger a navigation action from places where you do not have access to the `navigation` prop, or if you&#39;re looking for an alternative to using the `navigation` prop."><meta name="twitter:card" content="summary"><link rel="shortcut icon" href="https://reactnavigation.org/img/favicon.ico"><link rel="stylesheet" href="./Navigating without the navigation prop · React Navigation_files/docsearch.min.css"><link rel="stylesheet" href="./Navigating without the navigation prop · React Navigation_files/github-gist.min.css"><link rel="alternate" type="application/atom+xml" href="https://reactnavigation.org/blog/atom.xml" title="React Navigation Blog ATOM Feed"><link rel="alternate" type="application/rss+xml" href="https://reactnavigation.org/blog/feed.xml" title="React Navigation Blog RSS Feed"><script type="text/javascript" src="./Navigating without the navigation prop · React Navigation_files/buttons.js"></script><link rel="stylesheet" href="./Navigating without the navigation prop · React Navigation_files/prism.css"><link rel="stylesheet" href="./Navigating without the navigation prop · React Navigation_files/main.css"></head><body class="sideNavVisible separateOnPageNav"><div class="fixedHeaderContainer"><div class="headerWrapper wrapper"><header><a href="https://reactnavigation.org/en"><img class="logo" src="./Navigating without the navigation prop · React Navigation_files/spiro_white.svg" alt="React Navigation"><h2 class="headerTitleWithLogo">React Navigation</h2></a><a href="https://reactnavigation.org/en/versions.html"><h3>2.x</h3></a><div class="navigationWrapper navigationSlider"><nav class="slidingNav"><ul class="nav-site nav-site-internal"><li class="siteNavGroupActive"><a href="https://reactnavigation.org/docs/en/getting-started.html" target="_self">Docs</a></li><li class=""><a href="https://reactnavigation.org/docs/en/api-reference.html" target="_self">API</a></li><li class=""><a href="https://reactnavigation.org/en/help.html" target="_self">Help</a></li><li class=""><a href="https://reactnavigation.org/blog" target="_self">Blog</a></li><span><li><a id="languages-menu" href="https://reactnavigation.org/docs/en/navigating-without-navigation-prop.html#"><img class="languages-icon" src="./Navigating without the navigation prop · React Navigation_files/language.svg" alt="Languages icon">English</a><div id="languages-dropdown" class="hide"><ul id="languages-dropdown-items"><li><a href="https://reactnavigation.org/docs/zh-Hans/navigating-without-navigation-prop.html">中文</a></li></ul></div></li><script>
        const languagesMenuItem = document.getElementById("languages-menu");
        const languagesDropDown = document.getElementById("languages-dropdown");
        languagesMenuItem.addEventListener("click", function(event) {
          event.preventDefault();

          if (languagesDropDown.className == "hide") {
            languagesDropDown.className = "visible";
          } else {
            languagesDropDown.className = "hide";
          }
        });
      </script></span><li class="navSearchWrapper reactNavSearchWrapper"><span class="algolia-autocomplete" style="position: relative; display: inline-block; direction: ltr;"><input type="text" id="search_input_react" placeholder="Search" title="Search" class="aa-input" autocomplete="off" spellcheck="false" role="combobox" aria-autocomplete="list" aria-expanded="false" aria-labelledby="search_input_react" aria-owns="algolia-autocomplete-listbox-0" dir="auto" style="position: relative; vertical-align: top;"><pre aria-hidden="true" style="position: absolute; visibility: hidden; white-space: pre; font-family: system-ui; font-size: 14px; font-style: normal; font-variant: normal; font-weight: 300; word-spacing: 0px; letter-spacing: normal; text-indent: 0px; text-rendering: auto; text-transform: none;"></pre><span class="aa-dropdown-menu" role="listbox" id="algolia-autocomplete-listbox-0" style="position: absolute; top: 100%; z-index: 100; display: none; left: 0px; right: auto;"><div class="aa-dataset-1"></div></span></span></li></ul></nav></div></header></div></div><div class="navPusher"><div class="docMainWrapper wrapper"><div class="container docsNavContainer" id="docsNav"><nav class="toc"><div class="toggleNav"><section class="navWrapper wrapper"><div class="navBreadcrumb wrapper"><div class="navToggle" id="navToggler"><i></i></div><h2><i>›</i><span>Assorted Guides</span></h2><div class="tocToggler" id="tocToggler"><i class="icon-toc"></i></div></div><div class="navGroups"><div class="navGroup"><h3 class="navGroupCategoryTitle">Fundamentals</h3><ul><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/getting-started.html">Getting started</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/hello-react-navigation.html">Hello React Navigation</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/navigating.html">Moving between screens</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/navigation-lifecycle.html">Navigation lifecycle</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/params.html">Passing parameters to routes</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/headers.html">Configuring the header bar</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/header-buttons.html">Header buttons</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/modal.html">Opening a full-screen modal</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/next-steps.html">Next steps</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/glossary-of-terms.html">Glossary of terms</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/common-mistakes.html">Common mistakes</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/limitations.html">Limitations</a></li></ul></div><div class="navGroup"><h3 class="navGroupCategoryTitle">Assorted Guides</h3><ul><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/tab-based-navigation.html">Tab navigation</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/drawer-based-navigation.html">Drawer navigation</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/auth-flow.html">Authentication flows</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/handling-iphonex.html">iPhone X support</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/status-bar.html">Different status bar configuration based on route</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/navigation-options-resolution.html">Navigation options resolution</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/custom-android-back-button-handling.html">Custom Android back button behavior</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/connecting-navigation-prop.html">Access the navigation prop from any component</a></li><li class="navListItem navListItemActive"><a class="navItem" href="https://reactnavigation.org/docs/en/navigating-without-navigation-prop.html">Navigating without the navigation prop</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/navigation-key.html">Using the navigation key</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/deep-linking.html">Deep linking</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/screen-tracking.html">Screen tracking</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/state-persistence.html">State persistence</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/app-containers.html">App Containers</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/redux-integration.html">Redux integration</a></li></ul></div><div class="navGroup"><h3 class="navGroupCategoryTitle">Build your own Navigator</h3><ul><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/custom-navigator-overview.html">Overview</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/routers.html">Routers</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/custom-navigators.html">Custom navigators</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/custom-routers.html">Custom routers</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/navigation-views.html">Navigation views</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/transitioner.html">Transitioner</a></li></ul></div><div class="navGroup"><h3 class="navGroupCategoryTitle">Related Resources</h3><ul><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/community-libraries-and-navigators.html">Community Navigators and Libraries</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/more-resources.html">More Resources</a></li></ul></div><div class="navGroup"><h3 class="navGroupCategoryTitle">Meta</h3><ul><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/pitch.html">Pitch &amp; anti-pitch</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/alternatives.html">Alternative libraries</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/contributing.html">Contributing</a></li></ul></div></div></section></div><script>
            document.addEventListener('DOMContentLoaded', function() {
              createToggler('#navToggler', '#docsNav', 'docsSliderActive');
              createToggler('#tocToggler', 'body', 'tocActive');

              const headings = document.querySelector('.toc-headings');
              headings && headings.addEventListener('click', function(event) {
                if (event.target.tagName === 'A') {
                  document.body.classList.remove('tocActive');
                }
              }, false);

              function createToggler(togglerSelector, targetSelector, className) {
                var toggler = document.querySelector(togglerSelector);
                var target = document.querySelector(targetSelector);

                if (!toggler) {
                  return;
                }

                toggler.onclick = function(event) {
                  event.preventDefault();

                  target.classList.toggle(className);
                };
              }
            });
        </script></nav></div><div class="container mainContainer"><div class="wrapper"><div class="post"><header class="postHeader"><a class="edit-page-link button" href="https://github.com/react-navigation/react-navigation.github.io/edit/source/docs/navigating-without-navigation-prop.md" target="_blank" rel="noreferrer noopener">Edit</a><h1 class="postHeaderTitle">Navigating without the navigation prop</h1></header><article><div><span><p>Calling functions such as <code>navigate</code> or <code>popToTop</code> on the <code>navigation</code> prop is not the only way to navigate around your app. As an alternative, you can dispatch navigation actions on your top-level navigator, provided you aren't passing your own <code>navigation</code> prop as you would with a redux integration. The presented approach is useful in situations when you want to trigger a navigation action from places where you do not have access to the <code>navigation</code> prop, or if you're looking for an alternative to using the <code>navigation</code> prop.</p>
<p>You can get access to a navigator through a <code>ref</code> and pass it to the <code>NavigationService</code> which we will later use to navigate. Use this only with the top-level (root) navigator of your app.</p>
<pre><code class="hljs css language-javascript"><span class="hljs-comment">// App.js</span>

<span class="hljs-keyword">import</span> NavigationService <span class="hljs-keyword">from</span> <span class="hljs-string">'./NavigationService'</span>;

<span class="hljs-keyword">const</span> TopLevelNavigator = createStackNavigator({ <span class="hljs-comment">/* ... */</span> })

<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">App</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">React</span>.<span class="hljs-title">Component</span> </span>{
  <span class="hljs-comment">// ...</span>

  render() {
    <span class="hljs-keyword">return</span> (
      <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">TopLevelNavigator</span>
        <span class="hljs-attr">ref</span>=<span class="hljs-string">{navigatorRef</span> =&gt;</span> {
          NavigationService.setTopLevelNavigator(navigatorRef);
        }}
      /&gt;
    );
  }
}
</span></code></pre>
<p>In the next step, we define <code>NavigationService</code> which is a simple module with functions that dispatch user-defined navigation actions.</p>
<pre><code class="hljs css language-javascript"><span class="hljs-comment">// NavigationService.js</span>

<span class="hljs-keyword">import</span> { NavigationActions } <span class="hljs-keyword">from</span> <span class="hljs-string">'react-navigation'</span>;

<span class="hljs-keyword">let</span> _navigator;

<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setTopLevelNavigator</span>(<span class="hljs-params">navigatorRef</span>) </span>{
  _navigator = navigatorRef;
}

<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">navigate</span>(<span class="hljs-params">routeName, params</span>) </span>{
  _navigator.dispatch(
    NavigationActions.navigate({
      routeName,
      params,
    })
  );
}

<span class="hljs-comment">// add other navigation functions that you need and export them</span>

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {
  navigate,
  setTopLevelNavigator,
};
</code></pre>
<p>Then, in any of your javascript modules, just import the <code>NavigationService</code> and call functions which you exported from it. You may use this approach outside of your React components and, in fact, it works just as well when used from within them.</p>
<pre><code class="hljs css language-javascript"><span class="hljs-comment">// any js module</span>
<span class="hljs-keyword">import</span> NavigationService <span class="hljs-keyword">from</span> <span class="hljs-string">'path-to-NavigationService.js'</span>;

<span class="hljs-comment">// ...</span>

NavigationService.navigate(<span class="hljs-string">'ChatScreen'</span>, { <span class="hljs-attr">userName</span>: <span class="hljs-string">'Lucy'</span> });
</code></pre>
<p>In <code>NavigationService</code>, you can create your own navigation actions, or compose multiple navigation actions into one, and then easily reuse them throughout your application. When writing tests, you may mock the navigation functions, and make assertions on whether the correct functions are called, with the correct parameters.</p>
</span></div></article></div><div class="docs-prevnext"><a class="docs-prev button" href="https://reactnavigation.org/docs/en/connecting-navigation-prop.html">← Access the navigation prop from any component</a><a class="docs-next button" href="https://reactnavigation.org/docs/en/navigation-key.html">Using the navigation key →</a></div></div></div><nav class="onPageNav"></nav></div><footer class="nav-footer" id="footer"><section class="sitemap"><a href="https://reactnavigation.org/" class="nav-home"><img src="./Navigating without the navigation prop · React Navigation_files/spiro_white.svg" alt="React Navigation" width="66" height="58"></a><div><h5>Docs</h5><a href="https://reactnavigation.org/docs/en/getting-started.html">Getting Started</a><a href="https://reactnavigation.org/docs/en/api-reference.html">API Reference</a><a href="https://reactnavigation.org/docs/en/custom-navigator-overview.html">Building your own Navigator</a><a href="https://reactnavigation.org/docs/en/contributing.html">Contributing</a></div><div><h5>Support</h5><a href="https://discord.gg/4xEK3nD">Chat in our Discord channel</a><a href="https://react-navigation.canny.io/feature-requests">Request a feature on Canny</a><a href="https://github.com/react-navigation/react-navigation/issues">Report a bug on Github</a><a href="https://stackoverflow.com/questions/tagged/react-navigation" target="_blank">Get help on Stack Overflow</a></div><div><h5>More</h5><a href="https://github.com/react-navigation/react-navigation">GitHub</a><span></span></div></section></footer></div><script type="text/javascript" src="./Navigating without the navigation prop · React Navigation_files/docsearch.min.js"></script><script>
              var search = docsearch({
                
                apiKey: 'c967b4a1491b9cb486d3dca087b771e6',
                indexName: 'reactnavigation',
                inputSelector: '#search_input_react'
              });
            </script></body><div style="display: block; opacity: 1;"></div></html>