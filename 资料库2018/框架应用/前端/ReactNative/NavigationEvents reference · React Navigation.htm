<!DOCTYPE html>
<!-- saved from url=(0058)https://reactnavigation.org/docs/en/navigation-events.html -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><style>#back-to-top{background:#000;-webkit-border-radius:50%;-moz-border-radius:50%;border-radius:50%;bottom:20px;-webkit-box-shadow:0 2px 5px 0 rgba(0,0,0,.26);-moz-box-shadow:0 2px 5px 0 rgba(0,0,0,.26);box-shadow:0 2px 5px 0 rgba(0,0,0,.26);color:#fff;cursor:pointer;display:block;height:56px;opacity:1;outline:0;position:fixed;right:20px;-webkit-tap-highlight-color:transparent;-webkit-touch-callout:none;-webkit-transition:bottom .2s,opacity .2s;-o-transition:bottom .2s,opacity .2s;-moz-transition:bottom .2s,opacity .2s;transition:bottom .2s,opacity .2s;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:56px;z-index:100}#back-to-top svg{display:block;fill:currentColor;height:24px;margin:16px auto 0;width:24px}#back-to-top.hidden{bottom:-56px;opacity:0}</style><meta http-equiv="X-UA-Compatible" content="IE=edge"><title>NavigationEvents reference · React Navigation</title><meta name="viewport" content="width=device-width"><meta name="generator" content="Docusaurus"><meta name="description" content="`NavigationEvents` is a React component providing a declarative API to subscribe to navigation events. It will subscribe to navigation events on mount, and unsubscribe on unmount."><meta name="docsearch:language" content="en"><meta property="og:title" content="NavigationEvents reference · React Navigation"><meta property="og:type" content="website"><meta property="og:url" content="https://reactnavigation.org/index.html"><meta property="og:description" content="`NavigationEvents` is a React component providing a declarative API to subscribe to navigation events. It will subscribe to navigation events on mount, and unsubscribe on unmount."><meta name="twitter:card" content="summary"><link rel="shortcut icon" href="https://reactnavigation.org/img/favicon.ico"><link rel="stylesheet" href="./NavigationEvents reference · React Navigation_files/docsearch.min.css"><link rel="stylesheet" href="./NavigationEvents reference · React Navigation_files/github-gist.min.css"><link rel="alternate" type="application/atom+xml" href="https://reactnavigation.org/blog/atom.xml" title="React Navigation Blog ATOM Feed"><link rel="alternate" type="application/rss+xml" href="https://reactnavigation.org/blog/feed.xml" title="React Navigation Blog RSS Feed"><script type="text/javascript" src="./NavigationEvents reference · React Navigation_files/buttons.js"></script><style type="text/css">
:root #header + #content > #left > #rlblock_left
{ display: none !important; }</style><script src="./NavigationEvents reference · React Navigation_files/vanilla-back-to-top.min.js"></script><script>
        document.addEventListener('DOMContentLoaded', function() {
          addBackToTop(
            {"zIndex":100}
          )
        });
        </script><link rel="stylesheet" href="./NavigationEvents reference · React Navigation_files/prism.css"><link rel="stylesheet" href="./NavigationEvents reference · React Navigation_files/main.css"></head><body class="sideNavVisible separateOnPageNav"><div class="fixedHeaderContainer"><div class="headerWrapper wrapper"><header><a href="https://reactnavigation.org/en"><img class="logo" src="./NavigationEvents reference · React Navigation_files/spiro_white.svg" alt="React Navigation"><h2 class="headerTitleWithLogo">React Navigation</h2></a><div class="navigationWrapper navigationSlider"><nav class="slidingNav"><ul class="nav-site nav-site-internal"><li class=""><a href="https://reactnavigation.org/docs/en/getting-started.html" target="_self">Docs</a></li><li class="siteNavGroupActive"><a href="https://reactnavigation.org/docs/en/api-reference.html" target="_self">API</a></li><li class=""><a href="https://reactnavigation.org/en/help.html" target="_self">Help</a></li><li class=""><a href="https://reactnavigation.org/blog" target="_self">Blog</a></li><span><li><a id="languages-menu" href="https://reactnavigation.org/docs/en/navigation-events.html#"><img class="languages-icon" src="./NavigationEvents reference · React Navigation_files/language.svg" alt="Languages icon">English</a><div id="languages-dropdown" class="hide"><ul id="languages-dropdown-items"><li><a href="https://reactnavigation.org/docs/zh-Hans/navigation-events.html">中文</a></li></ul></div></li><script>
        const languagesMenuItem = document.getElementById("languages-menu");
        const languagesDropDown = document.getElementById("languages-dropdown");
        languagesMenuItem.addEventListener("click", function(event) {
          event.preventDefault();

          if (languagesDropDown.className == "hide") {
            languagesDropDown.className = "visible";
          } else {
            languagesDropDown.className = "hide";
          }
        });
      </script></span><li class="navSearchWrapper reactNavSearchWrapper"><span class="algolia-autocomplete" style="position: relative; display: inline-block; direction: ltr;"><input type="text" id="search_input_react" placeholder="Search" title="Search" class="aa-input" autocomplete="off" spellcheck="false" role="combobox" aria-autocomplete="list" aria-expanded="false" aria-labelledby="search_input_react" aria-owns="algolia-autocomplete-listbox-0" dir="auto" style="position: relative; vertical-align: top;"><pre aria-hidden="true" style="position: absolute; visibility: hidden; white-space: pre; font-family: system-ui; font-size: 14px; font-style: normal; font-variant: normal; font-weight: 300; word-spacing: 0px; letter-spacing: normal; text-indent: 0px; text-rendering: auto; text-transform: none;"></pre><span class="aa-dropdown-menu" role="listbox" id="algolia-autocomplete-listbox-0" style="position: absolute; top: 100%; z-index: 100; display: none; left: 0px; right: auto;"><div class="aa-dataset-1"></div></span></span></li></ul></nav></div></header></div></div><div class="navPusher"><div class="docMainWrapper wrapper"><div class="container docsNavContainer" id="docsNav"><nav class="toc"><div class="toggleNav"><section class="navWrapper wrapper"><div class="navBreadcrumb wrapper"><div class="navToggle" id="navToggler"><i></i></div><h2><i>›</i><span>API Reference</span></h2><div class="tocToggler" id="tocToggler"><i class="icon-toc"></i></div></div><div class="navGroups"><div class="navGroup"><h3 class="navGroupCategoryTitle">API Reference</h3><ul><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/api-reference.html">Overview</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/navigation-prop.html">Navigation prop</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/navigation-actions.html">NavigationActions</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/stack-actions.html">StackActions</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/drawer-actions.html">DrawerActions</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/stack-navigator.html">createStackNavigator</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/switch-navigator.html">createSwitchNavigator</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/drawer-navigator.html">createDrawerNavigator</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/tab-navigator.html">createTabNavigator</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/bottom-tab-navigator.html">createBottomTabNavigator</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/material-bottom-tab-navigator.html">createMaterialBottomTabNavigator</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/material-top-tab-navigator.html">createMaterialTopTabNavigator</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/with-navigation.html">withNavigation</a></li><li class="navListItem"><a class="navItem" href="https://reactnavigation.org/docs/en/with-navigation-focus.html">withNavigationFocus</a></li><li class="navListItem navListItemActive"><a class="navItem" href="https://reactnavigation.org/docs/en/navigation-events.html">NavigationEvents</a></li></ul></div></div></section></div><script>
            document.addEventListener('DOMContentLoaded', function() {
              createToggler('#navToggler', '#docsNav', 'docsSliderActive');
              createToggler('#tocToggler', 'body', 'tocActive');

              const headings = document.querySelector('.toc-headings');
              headings && headings.addEventListener('click', function(event) {
                if (event.target.tagName === 'A') {
                  document.body.classList.remove('tocActive');
                }
              }, false);

              function createToggler(togglerSelector, targetSelector, className) {
                var toggler = document.querySelector(togglerSelector);
                var target = document.querySelector(targetSelector);

                if (!toggler) {
                  return;
                }

                toggler.onclick = function(event) {
                  event.preventDefault();

                  target.classList.toggle(className);
                };
              }
            });
        </script></nav></div><div class="container mainContainer"><div class="wrapper"><div class="post"><header class="postHeader"><a class="edit-page-link button" href="https://github.com/react-navigation/react-navigation.github.io/edit/source/docs/navigation-events.md" target="_blank" rel="noreferrer noopener">Edit</a><h1 class="postHeaderTitle">NavigationEvents reference</h1></header><article><div><span><p><code>NavigationEvents</code> is a React component providing a declarative API to subscribe to navigation events. It will subscribe to navigation events on mount, and unsubscribe on unmount.</p>
<h3><a class="anchor" aria-hidden="true" id="component-props"></a><a href="https://reactnavigation.org/docs/en/navigation-events.html#component-props" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Component props</h3>
<ul>
<li><code>navigation</code> - navigation props (optional, defaults to reading from React context)</li>
<li><code>onWillFocus</code> - event listener</li>
<li><code>onDidFocus</code> - event listener</li>
<li><code>onWillBlur</code> - event listener</li>
<li><code>onDidBlur</code> - event listener</li>
</ul>
<p>The event listener is the same as the imperative <a href="https://reactnavigation.org/docs/en/navigation-prop.html#addlistener-subscribe-to-updates-to-navigation-lifecycle"><code>navigation.addListener(...)</code></a> API.</p>
<h3><a class="anchor" aria-hidden="true" id="example"></a><a href="https://reactnavigation.org/docs/en/navigation-events.html#example" aria-hidden="true" class="hash-link"><svg class="hash-link-icon" aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Example</h3>
<pre><code class="hljs css language-jsx harmony"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> View <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-native'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> NavigationEvents <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-navigation'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">MyScreen</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NavigationEvents</span>
      <span class="token attr-name">onWillFocus</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>payload <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'will focus'</span><span class="token punctuation">,</span>payload<span class="token punctuation">)</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">onDidFocus</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>payload <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'did focus'</span><span class="token punctuation">,</span>payload<span class="token punctuation">)</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">onWillBlur</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>payload <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'will blur'</span><span class="token punctuation">,</span>payload<span class="token punctuation">)</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">onDidBlur</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>payload <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'did blur'</span><span class="token punctuation">,</span>payload<span class="token punctuation">)</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">/&gt;</span></span>
    <span class="token punctuation">{</span><span class="token comment">/* 
      Your view code
    */</span><span class="token punctuation">}</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>View</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> MyScreen<span class="token punctuation">;</span>
</code></pre>
</span></div></article></div><div class="docs-prevnext"><a class="docs-prev button" href="https://reactnavigation.org/docs/en/with-navigation-focus.html">← withNavigationFocus</a></div></div></div><nav class="onPageNav"></nav></div><footer class="nav-footer" id="footer"><section class="sitemap"><a href="https://reactnavigation.org/" class="nav-home"><img src="./NavigationEvents reference · React Navigation_files/spiro_white.svg" alt="React Navigation" width="66" height="58"></a><div><h5>Docs</h5><a href="https://reactnavigation.org/docs/en/getting-started.html">Getting Started</a><a href="https://reactnavigation.org/docs/en/api-reference.html">API Reference</a><a href="https://reactnavigation.org/docs/en/custom-navigator-overview.html">Building your own Navigator</a><a href="https://reactnavigation.org/docs/en/contributing.html">Contributing</a></div><div><h5>Versions</h5><a href="https://reactnavigation.org/docs/getting-started.html">Version 2 docs</a><a href="https://v1.reactnavigation.org/docs/getting-started.html">Version 1 docs</a></div><div><h5>Support</h5><a href="https://discord.gg/4xEK3nD">Chat in our Discord channel</a><a href="https://react-navigation.canny.io/feature-requests">Request a feature on Canny</a><a href="https://github.com/react-navigation/react-navigation/issues">Report a bug on Github</a><a href="https://stackoverflow.com/questions/tagged/react-navigation" target="_blank">Get help on Stack Overflow</a></div><div><h5>More</h5><a href="https://github.com/react-navigation/react-navigation">GitHub</a><span></span></div></section></footer></div><script type="text/javascript" src="./NavigationEvents reference · React Navigation_files/docsearch.min.js"></script><script>
              var search = docsearch({
                
                apiKey: 'c967b4a1491b9cb486d3dca087b771e6',
                indexName: 'reactnavigation',
                inputSelector: '#search_input_react'
              });
            </script><div id="back-to-top" class=""><svg viewBox="0 0 24 24"><path d="M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z"></path></svg></div></body><div style="display: block; opacity: 1;"></div></html>